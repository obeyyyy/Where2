can you edit my hero section by removing ONLY the div of the image and its little details, leave the form, title and everother thing, and add a vid background.   return (
    <div className="w-full min-h-screen bg-gradient-to-b from-white to-gray-50 flex flex-col mb-8">
      
      {/* Hero Section */}
      <section className="section-lg p-0 m-0 bg-gradient-to-b from-white to-gray-50/30">
      
        <div className="container-slim">
          
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.7 }}
            className="w-full text-center"
          >
           
          {/* Enhanced Hero Section */}
          <div className="flex flex-col items-center">
            <div className="mt-5">
            {/* Product Badge */}
            <motion.div
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.6, delay: 0.2 }}
              className="inline-flex items-center gap-3 bg-white/90 backdrop-blur-sm border border-orange-200/50 rounded-full px-8 py-4 shadow-xl"
            >
              <div className="w-3 h-2 bg-green-500 rounded-full animate-pulse" />
              <span className="text-gray-700 font-semibold">Now Live • AI-Powered Travel Planning</span>
              <div className="bg-orange-500 text-white text-xs font-bold px-3 py-1 rounded-full">BETA</div>
            </motion.div>
              <h1 className="text-5xl md:text-6xl font-black mb-0 text-gray-800 mt-5 ">
                Your Next
                <span className="relative h-16 md:h-20 inline-block ml-2 align-middle">
                  {/* Animated word will be rendered here */}
                  <AnimatedWord words={["Trip....", "Getaway", "Escape", "Journey"]} colors={["#FF8C00", "#FFA500", "#FF6B35", "#FF8C00"]} interval={2500} />
                </span>
                <br className="md:hidden newline-nowrap" /> Awaits
              </h1>
             {/* Hero Image with Enhanced Floating Elements */}
            <motion.div
              className="w-full max-w-3xl mx-auto mb-16"
              initial={{ opacity: 0, scale: 0.9, y: 20 }}
              animate={{ opacity: 1, scale: 1, y: 0 }}
              transition={{ duration: 1, delay: 0.4 }}
            >
              <div className="relative">
                <img
                  src="/images/3d-illustration-with-travel-tourists-characters.png"
                  className="w-full h-auto object-contain drop-shadow-2xl"
                  alt="Travel Characters"
                />

                {/* Enhanced Floating UI Elements */}
                <motion.div
                  className="absolute top-10 left-10 sm:left-20 md:left-28 bg-white/95 backdrop-blur-sm rounded-2xl p-5 shadow-xl border border-orange-200/50"
                  animate={{ y: [0, -10, 0] }}
                  transition={{ duration: 3, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" }}
                >
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center">
                      <FiMapPin className="w-5 h-5 text-white" />
                    </div>
                    <div>
                      <div className="text-sm font-bold text-gray-800">Tokyo, Japan</div>
                      <div className="text-xs text-gray-600">Flight + Hotel from €899</div>
                    </div>
                  </div>
                </motion.div>

                <motion.div
                  className="absolute top-10 right-10 sm:right-20 md:right-28 bg-white/95 backdrop-blur-sm rounded-2xl p-5 shadow-xl border border-green-200/50"
                  animate={{ y: [0, 10, 0] }}
                  transition={{ duration: 3, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut", delay: 1 }}
                >
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center">
                      <FiDollarSign className="w-5 h-5 text-white" />
                    </div>
                    <div>
                      <div className="text-sm font-bold text-gray-800">Save €420+</div>
                      <div className="text-xs text-gray-600">vs separate booking</div>
                    </div>
                  </div>
                </motion.div>

                <motion.div
                  className="absolute bottom-10 left-10 sm:bottom-20 md:bottom-10 -translate-x-1/2 bg-white/95 backdrop-blur-sm rounded-2xl p-5 shadow-xl border border-purple-200/50"
                  animate={{ scale: [1, 1.05, 1] }}
                  transition={{ duration: 2, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut", delay: 0.5 }}
                >
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center">
                      <FiZap className="w-5 h-5 text-white" />
                    </div>
                    <div>
                      <div className="text-sm font-bold text-gray-800">AI-Powered</div>
                      <div className="text-xs text-gray-600">Smart recommendations</div>
                    </div>
                  </div>
                </motion.div>
              </div>
            </motion.div>
              {/* Key Benefits */}
              <div className="flex flex-wrap justify-center mb-6 gap-3">
                  {[
                    { icon: <FiZap className="w-5 h-5" />, text: "AI-powered matching" },
                    { icon: <FiShield className="w-5 h-5" />, text: "Secure & reliable" },
                    { icon: <FiClock className="w-5 h-5" />, text: "Book in minutes" },
                  ].map((item, idx) => (
                    <motion.div
                      key={idx}
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.5, delay: 0.7 + idx * 0.1 }}
                      className="flex items-center gap-3 text-gray-600 bg-white/70 backdrop-blur-sm px-6 py-3 rounded-full border border-gray-200/50 shadow-lg"
                    >
                      <span className="text-orange-500">{item.icon}</span>
                      <span className="font-semibold">{item.text}</span>
                    </motion.div>
                  ))}
                </div>

              {/* Hero Search Section */}
              <div className="mt-0 w-full max-w-4xl mx-auto">
                {/* Search Type Selector */}
                <div className="flex gap-2 mb-6 p-1 rounded-full justify-center">
                  {[
                    { icon: <FiBriefcase className="w-5 h-5" />, label: 'All-in-One Trip', type: 'all' },
                    { icon: <FiArrowRight className="w-5 h-5" />, label: 'Flight Only', type: 'flights' },
                    { icon: <FiHome className="w-5 h-5" />, label: 'Hotel Only', type: 'hotels' }
                  ].map((item) => (
                    <motion.button
                      key={item.type}
                      onClick={() => setActiveSearchType(item.type)}
                      className={`flex items-center px-4 py-2 rounded-full transition-all ${activeSearchType === item.type 
                        ? 'bg-gradient-to-br from-[#FFA500] to-[#FF8C00] text-white shadow-md' 
                        : 'text-gray-600 hover:bg-orange-50'}`}
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                    >
                      {item.icon}
                      <span className="ml-2 font-medium">{item.label}</span>
                    </motion.button>
                  ))}
                </div>

                {/* Search Forms */}
                <motion.div 
                  className=" rounded-2xl "
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.3 }}
                >
                  {activeSearchType === 'all' ? (
                    <Link href="/search" className="block text-center">
                      <Button
                        text="Plan Your Perfect Trip"
                        href="/search"
                        icon={true}
                      />
                      <p className="mt-4 p-4 text-gray-600">Find the best flight & hotel combinations</p>
                    </Link>
                  ) : activeSearchType === 'flights' ? (
                    <div className="space-y-6">
                      {/* Trip Type Selection */}
                      <div className="flex gap-4 p-1 rounded-lg w-fit">
                        {['Round Trip', 'One Way'].map((type) => (
                          <button
                            key={type}
                            className={`px-4 py-2 rounded-lg transition-all ${tripType === type 
                              ? 'text-orange-500 font-medium' 
                              : 'text-gray-600 hover:bg-white/50'}`}
                            onClick={() => setTripType(type)}
                          >
                            {type}
                          </button>
                        ))}
                      </div>

                      {/* Flight Search Fields */}
                      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div className="col-span-2 md:col-span-1">
                          <label className="block text-sm font-medium text-gray-700 mb-1">From</label>
                          <div className="relative z-20">
                            <AirportAutocomplete
                              value={formData.origin}
                              onChange={(value) => handleInputChange('origin', value)}
                              label="Origin"
                              required
                            />
                          </div>
                        </div>
                        <div className="col-span-2 md:col-span-1">
                          <label className="block text-sm font-medium text-gray-700 mb-1">To</label>
                          <div className="relative z-10">
                            <AirportAutocomplete
                              value={formData.destination}
                              onChange={(value) => handleInputChange('destination', value)}
                              label="Destination"
                              required
                            />
                          </div>
                        </div>
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-1">Departure</label>
                          <div className="relative">
                            <input 
                              type="date" 
                              className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                              value={formData.departureDate}
                              onChange={(e) => handleInputChange('departureDate', e.target.value)}
                              required
                            />
                            <FiCalendar className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" />
                          </div>
                        </div>
                        {tripType === 'Round Trip' && (
                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-1">Return</label>
                            <div className="relative">
                              <input 
                                type="date" 
                                className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                                value={formData.returnDate}
                                onChange={(e) => handleInputChange('returnDate', e.target.value)}
                              />
                              <FiCalendar className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" />
                            </div>
                          </div>
                        )}
                      </div>

                      {/* Passenger Selection */}
                      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div className="col-span-2 md:col-span-1">
                          <label className="block text-sm font-medium text-gray-700 mb-1">Passengers</label>
                          <select 
                            className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none"
                            value={formData.travelers}
                            onChange={(e) => handleInputChange('travelers', parseInt(e.target.value))}
                          >
                            {[1,2,3,4,5,6].map(num => (
                              <option key={num} value={num}>{num} {num === 1 ? 'passenger' : 'passengers'}</option>
                            ))}
                          </select>
                        </div>
                        <div className="col-span-2 md:col-span-1">
                          <label className="block text-sm font-medium text-gray-700 mb-1">Class</label>
                          <select 
                            className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none"
                            value={formData.cabinClass}
                            onChange={(e) => handleInputChange('cabinClass', e.target.value)}
                          >
                            {['Economy', 'Premium Economy', 'Business', 'First'].map(cls => (
                              <option key={cls} value={cls.toLowerCase()}>{cls}</option>
                            ))}
                          </select>
                        </div>
                      </div>

                      <button 
                        type="submit"
                        onClick={handleFlightSearch}
                        className="w-full py-3 bg-gradient-to-br from-[#FFA500] to-[#FF8C00] text-white font-bold rounded-lg shadow-md hover:shadow-lg transition-shadow group disabled:opacity-50 disabled:cursor-not-allowed"
                        disabled={!formData.origin?.iata || !formData.destination?.iata || !formData.departureDate}
                      >
                        Search Flights <FiArrowRight className="inline-block ml-2 group-hover:translate-x-1 transition-transform" />
                      </button>
                    </div>
                  ) : (
                    <div className="space-y-6">
                      {/* Hotel Search Fields */}
                      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div className="col-span-2">
                          <label className="block text-sm font-medium text-gray-700 mb-1">Destination</label>
                          <div className="relative">
                            <input 
                              type="text" 
                              placeholder="City or hotel name"
                              className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                            />
                            <FiMapPin className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" />
                          </div>
                        </div>
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-1">Check-in</label>
                          <div className="relative">
                            <input 
                              type="date" 
                              className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                            />
                            <FiCalendar className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" />
                          </div>
                        </div>
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-1">Check-out</label>
                          <div className="relative">
                            <input 
                              type="date" 
                              className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                            />
                            <FiCalendar className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" />
                          </div>
                        </div>
                      </div>

                      {/* Room and Guest Selection */}
                      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div className="col-span-1">
                          <label className="block text-sm font-medium text-gray-700 mb-1">Rooms</label>
                          <select className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none">
                            {[1,2,3,4].map(num => (
                              <option key={num} value={num}>{num} {num === 1 ? 'room' : 'rooms'}</option>
                            ))}
                          </select>
                        </div>
                        <div className="col-span-1">
                          <label className="block text-sm font-medium text-gray-700 mb-1">Guests</label>
                          <select className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none">
                            {[1,2,3,4,5,6].map(num => (
                              <option key={num} value={num}>{num} {num === 1 ? 'guest' : 'guests'}</option>
                            ))}
                          </select>
                        </div>
                        <div className="col-span-2">
                          <label className="block text-sm font-medium text-gray-700 mb-1">Room Type</label>
                          <select className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none">
                            {['Any Type', 'Standard', 'Deluxe', 'Suite', 'Family Room', 'Villa'].map(type => (
                              <option key={type} value={type.toLowerCase()}>{type}</option>
                            ))}
                          </select>
                        </div>
                      </div>

                      <button 
                        onClick={handleHotelSearch}
                        className="w-full py-3 bg-gradient-to-br from-[#FFA500] to-[#FF8C00] text-white font-bold rounded-lg shadow-md hover:shadow-lg transition-shadow group"
                      >
                        Search Hotels <FiArrowRight className="inline-block ml-2 group-hover:translate-x-1 transition-transform" />
                      </button>
                    </div>
                  )}
                </motion.div>
              </div>
            </div>
            <p className="max-w-2xl text-xl md:text-2xl text-gray-700 mb-10 font-medium mx-auto">
              Find and book the perfect <span className="text-[#FF8C00] font-semibold">flights</span> & <span className="text-[#FFA500] font-semibold">hotels</span> All in one place.
              Save up to <span className="font-bold text-[#FF6B35]">40% and Time</span> when you bundle your travel essentials.<br className="hidden md:inline" />
              <span className="inline-block mt-3 text-lg md:text-xl font-semibold bg-gradient-to-r from-[#FF8C00] to-[#FFA500] bg-clip-text text-transparent">
                Where will you go next?
              </span>
            </p>

          </div>
          </motion.div>
        </div>
      </section>
    